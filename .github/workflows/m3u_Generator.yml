# This is a basic workflow to help you get started with Actions

name: M3U generator

# Controls when the action will run. 
on:
  schedule:
    - cron: '0 0/3 * * *'

  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo testing!

      # Runs a set of commands using the runners shell 
      - name: config
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Main
        run: |
          pwd
          chmod +x autorun.sh
          ./autorun.sh

      - name: git add
        run: |
          git add -A
          ls -la

      - name: commit & push
        run: |
          git commit -m "links are updated"
          git push

      - name: Fetch and replace
        run: |
          curl -sL https://raw.githubusercontent.com/NZESupB/YouTube_to_m3u/main/youtube.m3u | sed -e 's/raw.githubusercontent.com/raw.nxnow.top/g' -e 's/manifest.googlevideo.com/ee.nxnow.top:4436/g' -e 's/github.com/git.nxnow.top/g' -e 's/upload.wikimedia.org/ee.nxnow.top:4437/g' -e 's/play-lh.googleusercontent.com/ee.nxnow.top:4438/g' -e 's/yt3.ggpht.com/ee.nxnow.top:4439/g'> ytb.m3u

      - name: Delete current release assets
        uses: 8Mi-Tech/delete-release-assets-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: YouTubeM3U
          deleteOnlyFromDrafts: false

      - name: Tag Repo
        uses: richardsimko/update-tag@v1
        with:
          tag_name: YouTubeM3U
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          cat > release.txt << 'EOF'
          Release created at  ${{ env.BUILDTIME }}
          <br>
          [Youtube to m3u / Source](https://raw.githubusercontent.com/benmoose39/YouTube_to_m3u/main/youtube.m3u)
          EOF

      - name: Upload Prerelease
        uses: softprops/action-gh-release@v1
        if: ${{  success() }}
        with:
          tag_name: YouTubeM3U
          files: |
            ./*.m3u
          prerelease: true
          body_path: release.txt
